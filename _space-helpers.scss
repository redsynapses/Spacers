/*
 * Spacing helpers
 * Best way to use it as a @extend to not litter markup:
 * .myButton
 *   @extend  .pvxl //padding vertical x-large
 *   will give you: padding-top: 4rem; padding-bottom: 4rem;
 *
 */
$sizeUnit: rem;
$marginKey: 'm';
$paddingKey: 'p';
$separator: '';
$allKey: 'a';
$verticalKey: 'v';
$horizontalKey: 'h';
$positions: (
  t: 'top',
  r: 'right',
  b: 'bottom',
  l: 'left',
);
$sizes: (
  none: 0,
  xxs: 0.125,
  xs: 0.25,
  s: 0.5,
  m: 1,
  l: 2,
  xl: 4,
  xxl: 8,
);

@function size-value($value) {
  @if $value == 0 { @return $value; }

  @if $value == 'auto' { @return $value; }

  @return #{$value}#{$sizeUnit};
}

@each $sizeKey, $sizeValue in $sizes {

  // "all" (top-right-bottom-left)
  .#{$marginKey}#{$allKey}#{$separator}#{$sizeKey} {
    margin: size-value($sizeValue);
  }

  .#{$paddingKey}#{$allKey}#{$separator}#{$sizeKey} {
    padding: size-value($sizeValue);
  }

  // vertical (top-bottom)
  .#{$marginKey}#{$verticalKey}#{$separator}#{$sizeKey} {
    margin-top: size-value($sizeValue);
    margin-bottom: size-value($sizeValue);
  }

  .#{$paddingKey}#{$verticalKey}#{$separator}#{$sizeKey} {
    padding-top: size-value($sizeValue);
    padding-bottom: size-value($sizeValue);
  }

  // horizontal (left-right)
  .#{$marginKey}#{$horizontalKey}#{$separator}#{$sizeKey} {
    margin-left: size-value($sizeValue);
    margin-right: size-value($sizeValue);
  }

  .#{$paddingKey}#{$horizontalKey}#{$separator}#{$sizeKey} {
    padding-left: size-value($sizeValue);
    padding-right: size-value($sizeValue);
  }

  // each of top,right,bottom,left:
  @each $posKey, $posValue in $positions {
    .#{$marginKey}#{$posKey}#{$separator}#{$sizeKey} {
      margin-#{$posValue}: size-value($sizeValue);
    }

    .#{$paddingKey}#{$posKey}#{$separator}#{$sizeKey} {
      padding-#{$posValue}: size-value($sizeValue);
    }
  }
}
